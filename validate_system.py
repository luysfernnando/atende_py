#!/usr/bin/env python3
"""
Script de valida√ß√£o para verificar se o sistema est√° funcionando corretamente
Usado para verificar a configura√ß√£o antes de fazer push
"""

import sys
import os
import subprocess

def run_command(cmd, description):
    """Executa um comando e retorna o resultado"""
    print(f"üîç {description}...")
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, cwd=os.getcwd())
        if result.returncode == 0:
            print(f"‚úÖ {description} - OK")
            return True
        else:
            print(f"‚ùå {description} - FALHOU")
            print(f"Erro: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå {description} - ERRO: {e}")
        return False

def check_python_imports():
    """Verifica se as importa√ß√µes Python est√£o funcionando"""
    print("üîç Verificando importa√ß√µes Python...")
    try:
        # Testa importa√ß√µes principais
        from src.models.consulta import Consulta
        from src.models.conversa import Conversa
        from src.services.chatbot_service import ChatbotService
        print("‚úÖ Importa√ß√µes Python - OK")
        return True
    except Exception as e:
        print(f"‚ùå Importa√ß√µes Python - FALHOU: {e}")
        return False

def main():
    """Executa todas as verifica√ß√µes"""
    print("üöÄ VALIDA√á√ÉO DO SISTEMA ATENDE-PY")
    print("=" * 50)
    
    checks = []
    
    # Verifica se est√° no diret√≥rio correto
    if not os.path.exists('app.py'):
        print("‚ùå N√£o est√° no diret√≥rio do projeto!")
        sys.exit(1)
    
    # Verifica importa√ß√µes Python
    checks.append(check_python_imports())
    
    # Verifica arquivos importantes
    required_files = [
        'app.py',
        'src/models/consulta.py',
        'src/models/conversa.py',
        'src/services/chatbot_service.py',
        'tests/test_models.py'
    ]
    
    print("üîç Verificando arquivos necess√°rios...")
    files_ok = True
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - N√ÉO ENCONTRADO")
            files_ok = False
    
    checks.append(files_ok)
    
    # Tenta executar teste b√°sico
    print("üîç Executando teste b√°sico...")
    try:
        from src.models.consulta import Consulta
        consulta = Consulta("Teste", "15/06/2025", "manh√£", "test_user")
        if consulta.nome == "Teste":
            print("‚úÖ Teste b√°sico - OK")
            checks.append(True)
        else:
            print("‚ùå Teste b√°sico - FALHOU")
            checks.append(False)
    except Exception as e:
        print(f"‚ùå Teste b√°sico - ERRO: {e}")
        checks.append(False)
    
    # Resultado final
    print("\n" + "=" * 50)
    if all(checks):
        print("üéâ TODOS OS TESTES PASSARAM!")
        print("‚úÖ Sistema pronto para GitHub Actions")
        return 0
    else:
        print("‚ö†Ô∏è ALGUNS TESTES FALHARAM")
        print("‚ùå Corrija os problemas antes de fazer push")
        return 1

if __name__ == "__main__":
    sys.exit(main())
